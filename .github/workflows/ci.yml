name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

env:
  SWC_FORCE_WASM: 1
  NX_DAEMON: 'false'

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Configure pnpm for Nx compatibility
        run: |
          echo "node-linker=hoisted" >> .npmrc
          echo "shamefully-hoist=true" >> .npmrc
          echo "public-hoist-pattern[]=@swc/core" >> .npmrc
          echo "public-hoist-pattern[]=@swc/helpers" >> .npmrc
          echo "public-hoist-pattern[]=nx" >> .npmrc

      # - name: Approve builds (if necessary)
      # run: pnpm approve-builds
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      - run: pnpm dlx nx run-many -t lint test build --verbose
      # Nx Cloud recommends fixes for failures to help you get CI green faster. Learn more: https://nx.dev/ci/features/self-healing-ci
#      - run: npx nx fix-ci
#        if: always()
